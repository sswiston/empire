% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.R
\name{ellipseMCMC}
\alias{ellipseMCMC}
\title{ellipseMCMC object}
\description{
This class stores an object of class "dataTree" and performs an MCMC on the dataTree using a customizeable set of moves.
}
\details{
If the dataTree provided by the user does not contain initialized data-augmented values for nodes (both W & V), initialized values for model parameters (param), or tip states, values will be simulated.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{dataTree}}{An object of class "dataTree"}

\item{\code{filepath}}{An object of class "character" (a string) that gives the filepath where you want the output log files saved. Default behavior will save the output to the same directory where the mcmc is run.}

\item{\code{prior_sigma_x}}{Prior on the sigma_x model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_y}}{Prior on the sigma_y model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_r}}{Prior on the sigma_r model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_s}}{Prior on the sigma_s model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_a}}{Prior on the sigma_a model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,5)}

\item{\code{prior_root_x}}{Prior on the root_x model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,1)}

\item{\code{prior_root_y}}{Prior on the root_y model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,1)}

\item{\code{prior_root_r}}{Prior on the root_r model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_root_s}}{Prior on the root_s model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_root_a}}{Prior on the root_a model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_mu}}{Prior on the mu model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_kappa}}{Prior on the kappa model parameter. Should be an object of the type "distribution" generated by using the package "distributions3". Default is Uniform(0,5)}

\item{\code{prob_W}}{The log probability of the data-augmented history of phylogenetic scenarios under the model}

\item{\code{prob_V}}{The log probability of the data-augmented history of r, s, and a values under the model}

\item{\code{prob_XY}}{The log probability of the observed x and y characters under the model}

\item{\code{prob_X}}{The log probability of the observed x character under the model}

\item{\code{prob_Y}}{The log probability of the observed y character under the model}

\item{\code{expected_values}}{The expected values of x and y under the model, based on the data-augmented history}

\item{\code{branch_probs}}{The branch-wise probabilities of r, s, and a, based on the data-augmented history}

\item{\code{likelihood}}{The log likelihood of the model under the priors (includes the data-augmented history)}

\item{\code{prior}}{The log prior of the model}

\item{\code{posterior}}{The log posterior of the model}

\item{\code{acceptances}}{A list of lists that keeps track of the number of proposals of each type and the number of acceptances, alongside the acceptance probabilities and proposal hyperparameters (for tuning during burnin)}

\item{\code{proposal_weights}}{A list of MCMC proposals and their relative weights (can use proportions or whole numbers). If you want to exclude a proposal, the weight can be set to 0}

\item{\code{completed_iterations}}{The total number of iterations this MCMC object has completed}

\item{\code{elapsed_time}}{The total amount of time this MCMC has spent running, in hms format (from hms package)}

\item{\code{under_prior}}{Whether to perform MCMC under the prior (acceptance ratio independent of likelihood), default is FALSE}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ellipseMCMC-new}{\code{ellipseMCMC$new()}}
\item \href{#method-ellipseMCMC-run}{\code{ellipseMCMC$run()}}
\item \href{#method-ellipseMCMC-continue}{\code{ellipseMCMC$continue()}}
\item \href{#method-ellipseMCMC-clone}{\code{ellipseMCMC$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ellipseMCMC-new"></a>}}
\if{latex}{\out{\hypertarget{method-ellipseMCMC-new}{}}}
\subsection{Method \code{new()}}{
Gets the log prior probability of the model from the evolutionary rates (sigma) and root probabilities (pi)


Calculates a new log prior probability when given a new value for one parameter (used in proposals)


Calculates a new log probability when given sigma_x and expected values (used in proposals)


Calculates a new log probability when given sigma_y and expected values (used in proposals)


Proposes an MCMC move, returning TRUE if the proposal should be accepted and FALSE if the proposal should not be accepted


Chooses a random proposal for a particular move given the proposal weights


Performs a single proposal by choosing a proposal type and calling the relevant proposal function


Gets nodes local to a selected node, returns row indices for parent / node / children / grands / greats (if they exist & are available for proposals) in random order


Performs a proposal on sigma_x


Performs a proposal on sigma_y


Performs a proposal on sigma_r


Performs a proposal on sigma_s


Performs a proposal on sigma_a


Performs a proposal on root_x


Performs a proposal on root_y


Performs a proposal on root_r


Performs a proposal on root_s


Performs a proposal on root_a


Performs a proposal on mu


Performs a proposal on kappa


Performs a proposal on W_d (the daughter configuration) at one node chosen at random


Performs a proposal on W_m (the cladogenetic mode) at one node chosen at random


Performs a proposal on W_d (the concentric circle) at one node chosen at random


Performs a proposal on W_d (the direction line) at one node chosen at random


Performs a proposal on V_r (the value of r) at one node chosen at random


Performs a proposal on V_s (the value of s) at one node chosen at random


Performs a proposal on V_a (the value of a) at one node chosen at random


Performs a proposal on V_r and V_s (the values of r and s) at one tip chosen at random -- this proposal suggests swapping to the other (r,s) pair that defines the same ellipse


Saves an iteration (if the iteration is not thinned)


Creates a new instance of the ellipseMCMC class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ellipseMCMC$new(
  dataTree = NULL,
  filepath = ".",
  prior_sigma_x = distributions3::Uniform(0, 1),
  prior_sigma_y = distributions3::Uniform(0, 1),
  prior_sigma_r = distributions3::Uniform(0, 1),
  prior_sigma_s = distributions3::Uniform(0, 1),
  prior_sigma_a = distributions3::Uniform(0, 5),
  prior_root_x = distributions3::Normal(0, 1),
  prior_root_y = distributions3::Normal(0, 1),
  prior_root_r = distributions3::Normal(0, 5),
  prior_root_s = distributions3::Normal(0, 5),
  prior_root_a = distributions3::Normal(0, 5),
  prior_mu = distributions3::Normal(0, 5),
  prior_kappa = distributions3::Uniform(0, 5),
  proposal_weights = list(sigma_x = 10, sigma_y = 10, sigma_r = 10, sigma_s = 10, sigma_a
    = 10, root_x = 1, root_y = 1, root_r = 1, root_s = 1, root_a = 1, mu = 10, kappa =
    10, W_d = 10, W_m = 10, W_c = 10, W_h = 10, V_r = 20, V_s = 20, V_a = 20, tip = 10),
  under_prior = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataTree}}{An object of class "dataTree"}

\item{\code{filepath}}{An object of class "character" (a string) that gives the filepath where you want the output log files saved. Default behavior will save the output to the same directory where the mcmc is run.}

\item{\code{prior_sigma_x}}{Prior on the sigma_x model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_y}}{Prior on the sigma_y model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_r}}{Prior on the sigma_r model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_s}}{Prior on the sigma_s model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,1)}

\item{\code{prior_sigma_a}}{Prior on the sigma_a model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,5)}

\item{\code{prior_root_x}}{Prior on the root_x model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,1)}

\item{\code{prior_root_y}}{Prior on the root_y model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,1)}

\item{\code{prior_root_r}}{Prior on the root_r model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_root_s}}{Prior on the root_s model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_root_a}}{Prior on the root_a model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_mu}}{Prior on the mu model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Normal(0,5)}

\item{\code{prior_kappa}}{Prior on the kappa model parameter. Should be an object of type "distribution" generated by using the package "distributions3". Default is Uniform(0,5)}

\item{\code{proposal_weights}}{A list of MCMC proposals and their relative weights (can use proportions or whole numbers). If you want to exclude a proposal, the weight can be set to 0}

\item{\code{under_prior}}{Whether to perform MCMC under the prior (acceptance ratio independent of likelihood), default is FALSE}

\item{\code{new_val}}{The new value of a parameter (numeric)}

\item{\code{name}}{The name of the parameter being updated (character)}

\item{\code{sigma_x}}{The value of sigma_x (numeric)}

\item{\code{expectations_1}}{The expected values at the tips of the tree}

\item{\code{sigma_y}}{The value of sigma_y (numeric)}

\item{\code{expectations_2}}{The expected values at the tips of the tree}

\item{\code{prior}}{The current prior probability of the model}

\item{\code{new_prior}}{The new prior probability of the model if the proposal is accepted}

\item{\code{likelihood}}{The current likelihood of the model}

\item{\code{new_likelihood}}{The new likelihood of the model if the proposal is accepted}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ellipseMCMC-run"></a>}}
\if{latex}{\out{\hypertarget{method-ellipseMCMC-run}{}}}
\subsection{Method \code{run()}}{
Runs an MCMC analysis
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ellipseMCMC$run(
  iterations,
  moves_per_iteration = 1,
  burnin = 0,
  thinning = 1,
  under_prior = NULL,
  filepath = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iterations}}{The number of iterations to run the analysis. If a number of burnin generations is also provided, some of these iterations will be burnin (recorded, but should be discarded due to tuning proposal hyperparameters)}

\item{\code{moves_per_iteration}}{The number of moves per iteration (total number of proposals for one iteration). The default value is 1.}

\item{\code{burnin}}{The number of generations that should be used for tuning burnin. These generations will still be saved. The default value is 0.}

\item{\code{thinning}}{How often the mcmc output is recorded, for example (thinning=10) will record every 10 generations. The default value is 1.}

\item{\code{under_prior}}{Whether to perform MCMC under the prior (acceptance ratio independent of likelihood), default is FALSE}

\item{\code{filepath}}{An object of class "character" (a string) that gives the filepath where you want the output log files saved. Default behavior will save the output to the same directory where the mcmc is run.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ellipseMCMC-continue"></a>}}
\if{latex}{\out{\hypertarget{method-ellipseMCMC-continue}{}}}
\subsection{Method \code{continue()}}{
Continues an MCMC analysis
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ellipseMCMC$continue(iterations, moves_per_iteration = 1, thinning = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{iterations}}{The number of iterations to run the analysis. None of these iterations will be used as burnin, and hyperparameters will not be further tuned.}

\item{\code{moves_per_iteration}}{The number of moves per iteration (total number of proposals for one iteration). The default value is 1.}

\item{\code{thinning}}{How often the mcmc output is recorded, for example (thinning=10) will record every 10 generations. The default value is 1.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ellipseMCMC-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ellipseMCMC-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ellipseMCMC$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
